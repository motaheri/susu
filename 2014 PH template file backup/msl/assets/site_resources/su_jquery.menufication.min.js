(function (e) {
    e.fn.extend({
        menufication: function (a, b) {
            if (k[a] && r) return k[a].apply(this, Array.prototype.slice.call(arguments, 1));
            if ("object" === typeof a || !a) return k.init.apply(this, arguments);
            e.error("Method " + a + " does not exist for menufication")
        },
        hasClasses: function (a) {
            a = a.replace(/\s/g, "").split(",");
            for (var b in a)
                if (jQuery(this).hasClass(a[b])) return !0;
            return !1
        },
        addClasses: function (a) {
            a = a.replace(/\s/g, "").split(",");
            for (var b in a) jQuery(this).addClass(a[b])
        }
    });
    var q, s, b, u = !1,
        r = !1,
        t = !1,
        d = "menufication",
        v, h, m, p, f = 0,
        j, l;
    s = {
        toggleElement: null,
        enableSwipe: !0,
        hideDefaultMenu: !1,
        showHeader: !0,
        customFixedHeader: null,
        menuText: "",
        triggerWidth: 770,
        addHomeLink: !0,
        addHomeText: "Home",
        childMenuSupport: !0,
        childMenuSelector: "sub-menu, child-menu, children",
        activeClassSelector: "active-class, active",
        supportAndroidAbove: 3.5,
        onlyMobile: !1,
        transitionDuration: 600,
        scrollSpeed: 0.6,
        allowedTags: "DIV, NAV, UL, LI, A, P, H1, H2, H3, H4, SPAN",
        wrapTagsInList: ""
    };
    var k = {
        init: function (a) {
            if (!r && (!c.utils.isBB() && !c.utils.isOldIE(9)) &&
                (q = e(this), a || (a = {}), b = e.extend({}, s, a), !b.onlyMobile || c.utils.isMobile())) {
                if (!c.utils.hasTranslate3d() || c.utils.androidVersionIsBelow(b.supportAndroidAbove)) d += "-non-css3";
                b.gestures = c.utils.isMobile() && !c.utils.isIE() ? {
                    start: "touchstart",
                    move: "touchmove",
                    end: "touchend",
                    click: "click",
                    fastClick: "touchend"
                } : c.utils.isIE() && c.utils.isMobile() ? {
                    start: "MSGestureStart",
                    move: "MSGestureChange",
                    end: "MSGestureEnd",
                    click: "click",
                    fastClick: "MSGestureEnd"
                } : {
                    start: "mousedown",
                    move: "mousemove",
                    end: "mouseup",
                    click: "click",
                    fastClick: "click"
                };
                c.utils.androidVersionIsBelow(b.supportAndroidAbove) && (b.gestures.fastClick = "click");
                c.scrolling.setScrollHandlers();
                b.triggerWidth ? (e(window).on("resize", function () {
                    c.utils.checkTriggerWidth(e(window).width())
                }), c.utils.checkTriggerWidth(e(window).width())) : c.init()
            }
        },
        openMenu: function () {
            h.addClass(d + "-transition-in");
            u = !0;
            v.bind(b.gestures.move, function (a) {
                a.preventDefault()
            })
        },
        closeMenu: function () {
            h.removeClass(d + "-transition-in");
            u = !1;
            v.unbind()
        },
        toggleMenu: function () {
            u ? k.closeMenu() :
                k.openMenu()
        }
    }, c = {
            init: function () {
                c.utils.wrapBody([d + "-page-holder", d + "-inner-wrap", d + "-outer-wrap"]);
                b.customFixedHeader ? c.buildCustomFixedHeader() : b.showHeader && c.buildHeader();
                c.buildMenu();
                c.addEvents();
                c.utils.isMobile() ? c.scrolling.addBouncyScroll() : p.addClass(d + "-scroll");
                r = !0;
                e(document).trigger("menufication-done", ["done"])
            },
            buildHeader: function () {
                var a = e('<div id="' + d + '-top" />').append('<div id="' + d + '-btn"><p>' + b.menuText + "</p></div>");
                h.prepend(a).addClass(d + "-add-padding");
                b.toggleElement =
                    "#" + d + "-btn"
            },
            buildCustomFixedHeader: function () {
                e(b.customFixedHeader).hide().addClass(d + "-original-custom-fixed-header");
                var a = e(b.customFixedHeader).clone();
                a.css("position", "relative");
                var n = e('<div class="' + d + '-custom-top" />');
                a.show().removeClass(d + "-original-custom-fixed-header");
                h.prepend(n.append(a)).addClass(d + "-add-padding")
            },
            buildMenu: function () {
                b.hideDefaultMenu && q.hide();
                var a = q.clone().removeAttr("id class"),
                    n = b.activeClassSelector ? b.activeClassSelector : "",
                    g = b.childMenuSelector ? b.childMenuSelector :
                        "";
                a.find("*").each(function () {
                    var a = e(this),
                        c = b.allowedTags ? b.allowedTags.replace(/\s/g, "").split(",") : s.allowedTags,
                        f = a.prop("tagName"); - 1 === c.indexOf(f) || a.hasClass("skip-link") ? a.remove() : ("A" === f && (c = a.text().toLowerCase(), c = c.charAt(0).toUpperCase() + c.slice(1), a.text(c)), b.wrapTagsInList === f && a.wrap("li"), a.hasClasses(g) ? (a.removeAttr("class id"), a.addClasses(g)) : a.hasClasses(n) ? (a.removeAttr("class id"), a.addClass(d + "-active-class")) : a.removeAttr("class id"))
                });
                b.addHomeLink && a.prepend('<li><a href="http://' +
                    window.location.hostname + '">' + b.addHomeText + "</a></li>");
                "UL" === a.prop("tagName") ? a.addClass(d + "-menu-level-0") : a.find("ul").first().addClass(d + "-menu-level-0").siblings("ul").addClass(d + "-menu-level-0");
                b.childMenuSelector && b.childMenuSupport ? c.buildChildMenus(a) : c.removeChildMenus(a);
                h.prepend(a);
                a.wrap('<div id="' + d + '-scroll-container" />');
                (c.utils.isIOS() || !c.utils.isMobile()) && a.wrap('<div id="' + d + '-transform-container" />');
                a.wrap('<nav id="' + d + '-nav" />').show();
                m = e("#" + d + "-nav");
                p = e("#" +
                    d + "-scroll-container")
            },
            buildChildMenus: function (a) {
                var n = b.childMenuSelector.replace(/\s/g, "").split(",");
                for (var g in n) {
					if (n.hasOwnProperty(g)) {
						a.find("." + n[g]).each(function () {
							var a = e(this);
							a.removeAttr("id class");
							a.addClass(d + "-child-menu");
							a.parent().addClass(d + "-has-child-menu").bind(b.gestures.click, function (b) {
								"A" !== b.target.nodeName && (b.preventDefault(), e(this).toggleClass(d + "-child-menu-open"), a.toggle(), b.stopPropagation())
							});
						});
						b.activeClassSelector && c.toggleActiveClasses(a);
					}
				}
                c.countMenuLevel(a);
            },
            countMenuLevel: function (a) {
                a.find("." +
                    d + "-child-menu").each(function () {
                    var a = e(this),
                        b = a.parents("." + d + "-child-menu").length + 1;
                    a.addClass(d + "-menu-level-" + b)
                })
            },
            removeChildMenus: function (a) {
                if (!b.childMenuSupport)
                    if (!b.childMenuSelector || b.childMenuSelector === s.childMenuSelector) a.find("." + d + "-menu-level-0").children().each(function () {
                        e(this).find("ul").remove()
                    });
                    else {
                        var c = b.childMenuSelector.replace(/\s/g, "").split(","),
                            g;
                        for (g in c) a.find("." + c[g]).each(function () {
                            e(this).remove()
                        })
                    }
            },
            toggleActiveClasses: function (a) {
                a.find("." + d +
                    "-has-child-menu").each(function () {
                    var a = e(this);
                    0 < a.find("*").children("." + d + "-active-class").length && (a.toggleClass(d + "-child-menu-open"), setTimeout(function () {
                        a.addClass(d + "-child-menu-open");
                        a.find("." + d + "-child-menu").first().show()
                    }, b.transitionDuration))
                })
            },
            addEvents: function () {
                b.toggleElement && e(b.toggleElement).bind(b.gestures.fastClick, function (a) {
                    a.preventDefault();
                    a.stopPropagation();
                    k.toggleMenu()
                });
                b.enableSwipe && c.utils.isMobile() && c.enableSwipeEvent()
            },
            removeEvents: function () {
                e(b.toggleElement).unbind();
                p.unbind()
            },
            enableSwipeEvent: function () {
                var a, c, g, f, h, j = e("#" + d + "-outer-wrap");
                j.bind(b.gestures.start, function (b) {
                    g = (new Date).getTime();
                    a = b.originalEvent.touches[0].pageX;
                    c = b.originalEvent.touches[0].clientY
                });
                j.bind(b.gestures.move, function (a) {
                    f = a.originalEvent.touches[0].pageX;
                    h = a.originalEvent.touches[0].clientY
                });
                j.bind(b.gestures.end, function () {
                    var b = f > a ? "right" : "left",
                        d = 40 < h - c || -40 > h - c,
                        e = 90 < f - a || -90 > f - a;
                    if (!(600 < (new Date).getTime() - g || d) && e) switch (b) {
                    case "left":
                        k.closeMenu();
                        break;
                    case "right":
                        k.openMenu()
                    }
                })
            },
            prevDefault: function (a) {
                a.preventDefault();
                a.stopPropagation()
            },
            scrolling: {
                addBouncyScroll: function () {
                    j = document.getElementById(d + "-nav");
                    var a = c.scrolling.checkTouchMove,
                        e = c.scrolling.scrollHandlers;
                    p.bind(b.gestures.start, function (a) {
                        f = c.scrolling.scrollHandlers.getTop(j);
                        l = a.originalEvent.touches[0].pageY
                    });
                    p.bind(b.gestures.move, function (b) {
                        b.preventDefault();
                        a(b, e)
                    });
                    p.bind(b.gestures.end, function () {
                        c.scrolling.checkScrollEffect()
                    })
                },
                checkTouchMove: function (a, b) {
                    var c = a.originalEvent.touches[0].pageY;
                    f = b.getTop();
                    b.setTop(c);
                    l = c
                },
                checkScrollEffect: function () {
                    var a = m.height(),
                        b = e(window).height(),
                        d = c.utils.isAndroid() ? 15 : 40;
                    c.scrolling.scrollHandlers.bounceBack(a, b, d)
                },
                setScrollHandlers: function () {
                    c.scrolling.scrollHandlers = c.utils.hasTranslate3d() && !c.utils.androidVersionIsBelow(b.supportAndroidAbove) ? {
                        getTop: function () {
                            return (new WebKitCSSMatrix(window.getComputedStyle(j).webkitTransform)).m42
                        },
                        setTop: function (a) {
                            j.style.webkitTransform = l >= a ? "translateY(" + (f + (a - l) * b.scrollSpeed) + "px)" : "translateY(" +
                                (f - (l - a) * b.scrollSpeed) + "px)"
                        },
                        bounceBack: function (a, e, g) {
                            if (a + f < e && a > e) m.addClass(d + "-add-transition"), j.style.webkitTransform = "translateY(" + -(a - e - g) + "px)", c.scrolling.removeTransitionClass(b.transitionDuration);
                            else if (0 < f || 0 > f && a < e) m.addClass(d + "-add-transition"), j.style.webkitTransform = "translateY(0px)", c.scrolling.removeTransitionClass(b.transitionDuration)
                        }
                    } : {
                        getTop: function () {
                            return parseInt(getComputedStyle(j).top, 10)
                        },
                        setTop: function (a) {
                            j.style.top = l >= a ? f + 1.1 * (a - l) + "px" : f - 1.1 * (l - a) + "px"
                        },
                        bounceBack: function (a, c, d) {
                            a + f < c && a > c ? m.animate({
                                top: -(a - c - d)
                            }, b.transitionDuration) : (0 < f || 0 > f && a < c) && m.animate({
                                top: 0
                            }, b.transitionDuration)
                        }
                    }
                },
                removeTransitionClass: function (a) {
                    setTimeout(function () {
                        m.removeClass(d + "-add-transition")
                    }, a)
                }
            },
            utils: {
                reset: function () {
                    e("." + d + "-custom-top").hide();
                    e("#" + d + "-top").hide();
                    h.removeClass(d + "-add-padding");
                    q.show();
                    c.removeEvents();
                    k.closeMenu();
                    e("." + d + "-original-custom-fixed-header").show();
                    e(document).trigger("menufication-reset", ["done"])
                },
                reapply: function () {
                    e("." +
                        d + "-custom-top").show();
                    e("#" + d + "-top").show();
                    h.addClass(d + "-add-padding");
                    b.hideDefaultMenu && q.hide();
                    c.addEvents();
                    e("." + d + "-original-custom-fixed-header").hide();
                    e(document).trigger("menufication-reapply", ["done"])
                },
                checkTriggerWidth: function (a) {
                    a <= b.triggerWidth && !t ? (r ? c.utils.reapply() : c.init(), t = !0) : a > b.triggerWidth && t && (t = !1, c.utils.reset())
                },
                wrapBody: function (a) {
                    for (var b in a) {
                        var c = document.createElement("div");
                        for (c.id = a[b]; document.body.firstChild;) c.appendChild(document.body.firstChild);
                        document.body.appendChild(c)
                    }
                    v = e("#" + d + "-inner-wrap");
                    h = e("#" + d + "-outer-wrap")
                },
                hasTranslate3d: function () {
                    var a = document.createElement("p"),
                        b, c = {
                            webkitTransform: "-webkit-transform",
                            OTransform: "-o-transform",
                            msTransform: "-ms-transform",
                            MozTransform: "-moz-transform",
                            transform: "transform"
                        };
                    document.body.insertBefore(a, null);
                    for (var d in c) void 0 !== a.style[d] && (a.style[d] = "translate3d(1px,1px,1px)", b = window.getComputedStyle(a).getPropertyValue(c[d]));
                    document.body.removeChild(a);
                    return void 0 !== b && 0 <
                        b.length && "none" !== b
                },
                isMobile: function () {
                    return navigator.userAgent.match(/Android|BlackBerry|iPhone|iPad|iPod|Opera Mini|IEMobile/i)
                },
                isAndroid: function () {
                    return navigator.userAgent.match(/Android/i)
                },
                isIOS: function () {
                    return navigator.userAgent.match(/iPhone|iPad|iPod/i)
                },
                isIE: function () {
                    return navigator.userAgent.match(/IEMobile/i) || -1 != navigator.appVersion.indexOf("MSIE")
                },
                isBB: function () {
                    return navigator.userAgent.match(/BlackBerry|BB10|RIM/i)
                },
                isOldIE: function (a) {
                    return -1 != navigator.appVersion.indexOf("MSIE") &&
                        parseFloat(navigator.appVersion.split("MSIE")[1]) < a
                },
                androidVersionIsBelow: function (a) {
                    var b = navigator.userAgent;
                    return 0 <= b.indexOf("Android") && parseFloat(b.slice(b.indexOf("Android") + 8)) < a ? !0 : !1
                }
            }
        }
})(jQuery);